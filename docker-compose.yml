services:
  postgres:
    image: postgres:17.4-bookworm
    restart: always
    environment:
      POSTGRES_USER: tikloudreunion
      POSTGRES_PASSWORD: tikloudreunion
    expose:
      - "5432"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.4.2-bookworm
    restart: always
    expose:
      - "6379"
    volumes:
      - redis:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  tikloudreunion:
    build:
      context: .
      dockerfile: development.Dockerfile
    restart: always
    expose:
      - "3000"
    networks:
      - backend
      - frontend
    environment:
      HOSTNAME: "0.0.0.0"
      PORT: 3000
      POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/tikloudreunion
      REDIS_URL: redis://redis:6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./src
          target: /usr/src/files/src
        - action: rebuild
          path: package*.json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:1.27.4-bookworm
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - frontend
    depends_on:
      tikloudreunion:
        condition: service_healthy

volumes:
  postgres:
  redis:

networks:
  backend:
  frontend: